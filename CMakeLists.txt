cmake_minimum_required(VERSION 3.16)

project(cpack-study)
execute_process(
        COMMAND git describe 
        OUTPUT_VARIABLE GIT_DESCRIBED
        OUTPUT_STRIP_TRAILING_WHITESPACE
)
# message("GIT_DESCRIBED=${GIT_DESCRIBED}")
# v 제거
string(SUBSTRING ${GIT_DESCRIBED} 1 -1 GIT_VERSION)
string(REGEX MATCH "([0-9]+)\\.([0-9]+)\\.([0-9]+)-(.+)?" _ ${GIT_VERSION})

# 추출된 값
set(PROJECT_VERSION_MAJOR ${CMAKE_MATCH_1})
set(PROJECT_VERSION_MINOR ${CMAKE_MATCH_2})
set(PROJECT_VERSION_PATCH ${CMAKE_MATCH_3})
set(PROJECT_VERSION_TWEAK ${CMAKE_MATCH_4})

add_executable(${PROJECT_NAME}
    main.cpp
)

#install
install(TARGETS ${PROJECT_NAME}
    DESTINATION bin)

# packaging for deb
set(CPACK_GENERATOR "DEB")
set(
        CPACK_PACKAGE_NAME ${PROJECT_NAME}
        CACHE STRING "cpack-study"
)

set(CPACK_PACKAGING_INSTALL_PREFIX /opt/cpack-study)
set(CPACK_PACKAGE_VERSION ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}-${PROJECT_VERSION_TWEAK})

set(CPACK_PACKAGE_CONTACT "moonysl@hanmail.net")
set(CPACK_DEBIAN_PACKAGE_MAINTAINER "Sang Moon, Lee <${CPACK_PACKAGE_CONTACT}>")

execute_process(
        COMMAND dpkg-architecture -qDEB_HOST_ARCH
        OUTPUT_VARIABLE DEB_ARCH
        OUTPUT_STRIP_TRAILING_WHITESPACE
)
set(CPACK_DEBIAN_FILE_NAME ${CPACK_PACKAGE_NAME}_${CPACK_PACKAGE_VERSION}_${DEB_ARCH}.deb)

include(CPack)